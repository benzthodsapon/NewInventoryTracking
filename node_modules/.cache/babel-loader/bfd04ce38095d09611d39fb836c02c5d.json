{"ast":null,"code":"var _jsxFileName = \"/Users/benzthodsapon/Desktop/InventoryTracking-main/src/Page/DamagedBed.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"antd\";\nimport { firestore } from \"../index\";\nimport { CheckCircleOutlined } from \"@ant-design/icons\";\nimport \"./detail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\n\nconst DamagedBed = () => {\n  _s();\n\n  const history = useHistory();\n  const [InventoryTracking, setInventoryTracking] = useState([{}]);\n  const [id, setId] = useState(0);\n  const [type, setType] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [img, setImg] = useState([]);\n  const [location, setLocation] = useState([]);\n  const [MyDamaged, setDamaged] = useState([{}]);\n  const [DamagedBed, setDamagedBed] = useState([{}]);\n\n  const onADD = (id, img, location, status, type) => {\n    firestore.collection(\"damaged\").doc(id.toString()).set({\n      id,\n      img,\n      location,\n      status,\n      type\n    });\n    alert(\"ทำการยืมเสร็จเรียบร้อย\");\n  };\n\n  const retriveData = () => {\n    firestore.collection(\"Bed\").onSnapshot(snapshot => {\n      let MyBed = snapshot.docs.map(d => {\n        const {\n          id,\n          img,\n          location,\n          status,\n          type\n        } = d.data();\n        return {\n          id,\n          img,\n          location,\n          status,\n          type\n        };\n      });\n      setDamaged(MyDamaged);\n    });\n  };\n\n  const retriveDataDamaged = () => {\n    firestore.collection(\"damaged\").onSnapshot(snapshot => {\n      let MyDamaged = snapshot.docs.map(d => {\n        const {\n          id,\n          img,\n          location,\n          status,\n          type\n        } = d.data();\n        return {\n          id,\n          img,\n          location,\n          status,\n          type\n        };\n      });\n      setDamaged(MyDamaged);\n    });\n  };\n\n  useEffect(() => {\n    retriveData();\n    retriveDataDamaged();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Bedid\",\n    children: DamagedBed.map(item => {\n      var _item$id;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: (item === null || item === void 0 ? void 0 : (_item$id = item.id) === null || _item$id === void 0 ? void 0 : _item$id.toString()) === history.location.pathname.substr(history.location.pathname.length - 1) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: 300,\n              marginRight: \"20px\"\n            },\n            cover: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: 200,\n                height: 250\n              },\n              alt: \"example\",\n              src: item.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this),\n            actions: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              onClick: () => onADD(item.id, item.img, item.location, item.status, item.type),\n              children: [/*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this), \"\\u0E41\\u0E08\\u0E49\\u0E07\\u0E0A\\u0E33\\u0E23\\u0E38\\u0E14\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)],\n            children: [/*#__PURE__*/_jsxDEV(Meta, {\n              title: `รหัสอุปกรณ์ ${item.id}`,\n              description: item.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Meta, {\n              description: `สถานที่จัดเก็บ ${item.location}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DamagedBed, \"S3uDdE2Ox5tqlDHUQSUgjIMfLzA=\", false, function () {\n  return [useHistory];\n});\n\n_c = DamagedBed;\nexport default DamagedBed;\n\nvar _c;\n\n$RefreshReg$(_c, \"DamagedBed\");","map":{"version":3,"sources":["/Users/benzthodsapon/Desktop/InventoryTracking-main/src/Page/DamagedBed.js"],"names":["useHistory","useLocation","React","useState","useEffect","Card","firestore","CheckCircleOutlined","Meta","DamagedBed","history","InventoryTracking","setInventoryTracking","id","setId","type","setType","status","setStatus","img","setImg","location","setLocation","MyDamaged","setDamaged","setDamagedBed","onADD","collection","doc","toString","set","alert","retriveData","onSnapshot","snapshot","MyBed","docs","map","d","data","retriveDataDamaged","item","pathname","substr","length","width","marginRight","height"],"mappings":"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","sourcesContent":["import { useHistory, useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"antd\";\nimport { firestore } from \"../index\";\nimport { CheckCircleOutlined } from \"@ant-design/icons\";\nimport \"./detail.css\";\n\nconst { Meta } = Card;\n\nconst DamagedBed = () => {\n  const history = useHistory();\n\n  const [InventoryTracking, setInventoryTracking] = useState([{}]);\n  const [id, setId] = useState(0);\n  const [type, setType] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [img, setImg] = useState([]);\n  const [location, setLocation] = useState([]);\n  const [MyDamaged, setDamaged] = useState([{}]);\n  const [DamagedBed, setDamagedBed] = useState([{}]);\n\n  const onADD = (id, img, location, status, type) => {\n    firestore\n      .collection(\"damaged\")\n      .doc(id.toString())\n      .set({ id, img, location, status, type });\n    alert(\"ทำการยืมเสร็จเรียบร้อย\");\n  };\n  const retriveData = () => {\n    firestore.collection(\"Bed\").onSnapshot((snapshot) => {\n      let MyBed = snapshot.docs.map((d) => {\n        const { id, img, location, status, type } = d.data();\n        return { id, img, location, status, type };\n      });\n      setDamaged(MyDamaged);\n    });\n  };\n  const retriveDataDamaged = () => {\n    firestore.collection(\"damaged\").onSnapshot((snapshot) => {\n      let MyDamaged= snapshot.docs.map((d) => {\n        const { id, img, location, status, type } = d.data();\n        return { id, img, location, status, type };\n      });\n\n      setDamaged(MyDamaged);\n    });\n  };\n  useEffect(() => {\n    retriveData();\n    retriveDataDamaged();\n  });\n  return (\n    <div className=\"Bedid\">\n      {DamagedBed.map((item) => {\n        return (\n          <>\n            {item?.id?.toString() ===\n              history.location.pathname.substr(\n                history.location.pathname.length - 1\n              ) && (\n              <div>\n                <Card\n                  style={{ width: 300, marginRight: \"20px\" }}\n                  cover={\n                    <img\n                      style={{ width: 200, height: 250 }}\n                      alt=\"example\"\n                      src={item.img}\n                    />\n                  }\n                  actions={[\n                    <h1\n                      onClick={() =>\n                        onADD(\n                          item.id,\n                          item.img,\n                          item.location,\n                          item.status,\n                          item.type\n                        )\n                      }\n                    >\n                      <CheckCircleOutlined />\n                      แจ้งชำรุด\n                    </h1>,\n                  ]}\n                >\n                  <Meta\n                    title={`รหัสอุปกรณ์ ${item.id}`}\n                    description={item.type}\n                  />\n                  <Meta description={`สถานที่จัดเก็บ ${item.location}`} />\n                </Card>\n              </div>\n            )}\n          </>\n        );\n      })}\n    </div>\n  );\n};\nexport default DamagedBed;\n"]},"metadata":{},"sourceType":"module"}